#!/bin/bash

success=0
total=0

#Look in with map KvK_map.py is located
#We dont look to far to keep the program fast
#If you use these tests in other directories, use the cd-command
#to make sure the tests are excuted in the map with KvK_map.py in it
if [ -f "KvK_map.py" ]; then
	echo Not changing the directory
else
	echo Changing directory
	cd ..
fi

if [ -f "KvK_map.py" ]; then
	echo ""
else
	echo Cannot find correct directory
	exit
fi

#Test 1, mapboxtoken found or not
mv mapboxtoken.txt mapboxtest.txt

output=$(python KvK_map.py)

if [ "$output" == "The mapbox access token could not be read" ]; then
	echo Mapbox access token test successfull
	success=$((success+1))
else
	echo Mapbox access token test failed
	echo expected \"The mapbox access token could not be read\"
	echo got \"$output\"
	echo ""
fi
total=$((total+1))

mv mapboxtest.txt mapboxtoken.txt

#Test 2, wrong password/username
cp map_tests/database_wrong.py database.py

output=$(python KvK_map.py)

if [ "$output" == "Connection could not be established" ]; then
	echo Connection fail test successfull
	success=$((success+1))
else
	echo Connection fail test failed
	echo expected \"Connection could not be established\"
	echo got \"$output\"
	echo ""
fi
total=$((total+1))

cp map_tests/database.py database.py

#Test 3, mapboxtoken found or not
mv tb_name.txt tb_test.txt

output=$(python KvK_map.py)

if [ "$output" == "The database name could not be read" ]; then
	echo Database name test successfull
	success=$((success+1))
else
	echo Database name test failed
	echo expected \"The database name could not be read\"
	echo got \"$output\"
	echo ""
fi
total=$((total+1))

mv tb_test.txt tb_name.txt

#Test 4, the database does not exist
cp map_tests/tb_non.txt tb_name.txt

output=$(python KvK_map.py)

if [ "$output" == "Database does not exists or is empty" ]; then
	echo Non existing database test successfull
	success=$((success+1))
else
	echo Non existing database test failed
	echo expected \"Database does not exists or is empty\"
	echo got \"$output\"
	echo ""
fi
total=$((total+1))

cp map_tests/tb_name.txt tb_name.txt

#Test 5, the database is empty
cp map_tests/tb_empty.txt tb_name.txt

output=$(python KvK_map.py)

if [ "$output" == "Database does not exists or is empty" ]; then
	echo Empty database test successfull
	success=$((success+1))
else
	echo Empty database test failed
	echo expected \"Database does not exists or is empty\"
	echo got \"$output\"
	echo ""
fi
total=$((total+1))

cp map_tests/tb_name.txt tb_name.txt

#Test 6, no config file
mv KvK_Locaties_SEProjectLIACS.specification.json nope.specification.json

output=$(python KvK_map.py)

if [ "$output" == "Failed to load configuration file" ]; then
	echo Non existing config file test successfull
	success=$((success+1))
else
	echo Non existing config file test failed
	echo expected \"Failed to load configuration file\"
	echo got \"$output\"
	echo ""
fi
total=$((total+1))

mv nope.specification.json KvK_Locaties_SEProjectLIACS.specification.json

#Test 7, tooltip not included in config file
cp map_tests/KvK_Locaties_SEProjectLIACS_Empty.specification.json KvK_Locaties_SEProjectLIACS.specification.json

output=$(python KvK_map.py)

if [ "$output" == "Failed to load tooltip configuration" ]; then
	echo Empty tooltip test successfull
	success=$((success+1))
else
	echo Empty tooltip test failed
	echo expected \"Failed to load tooltip configuration\"
	echo got \"$output\"
	echo ""
fi
total=$((total+1))

cp map_tests/KvK_Locaties_SEProjectLIACS.specification.json KvK_Locaties_SEProjectLIACS.specification.json

echo $success test successfull out of $total
